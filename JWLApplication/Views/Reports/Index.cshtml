@model IEnumerable<Models.audit>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .dt-buttons {
        float: right !important;
    }

    .btn-dt-table {
        float: right;
        margin: -73px 0px 0px 0px;
        background-color: #134078 !important;
        border-radius: 3px !important;
        border-color: #134078 !important;
        color: #fff !important;
        line-height: 33px;
        height: 36px;
        padding: 0px 13px 0px !important;
        font-size: 16px !important;
        background-image: none !important;
    }
</style>
<link href="https://cdn.datatables.net/buttons/1.6.2/css/buttons.dataTables.min.css" rel="stylesheet" />
<div class="page-content">
    <!-- content header-->
    <div class="content-header">
        <div class="row h-60 align-items-center">
            <div class="col-lg-6">
                <div class="p-title">
                    <h2>Reports</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="right-button-box">
                    <select class="form-control" id="userSelection" asp-items="@ViewBag.Users" style=" width: 160px;float: right;">
                        <option value="">Select User</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="search-filter">
        <div class="row">
            <div class="col-md-4">
                <label>
                    From
                </label>
                <input type="date" id="date-from" class="form-control">
            </div>
            <div class="col-md-4">
                <label>
                    To
                </label>
                <input type="date" id="date-to" class="form-control">
            </div>
            <div class="col-md-4">
                <a href="javascript:;" class="btn btn-primary" id="date-search">Search</a>
            </div>
        </div>
    </div>
    <div class="wt-box">
        <table class="table" id="example-report" style="width: 100%">
            <thead>
                <tr>
                    <th>
                        Audit Date Time
                    </th>
                    <th>
                        Audit User
                    </th>
                    <th>
                        Operation Type
                    </th>
                    <th>
                        Notes/Remarks
                    </th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Audit Date Time</th>
                    <th>Audit User</th>
                    <th>Operation Type</th>
                    <th>Notes/Remarks</th>
                </tr>
            </tfoot>
            @*<tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.auditDateTime.ToString("MM/dd/yyyy hh:mm tt")
                        </td>
                        <td>
                            @{
                                if (item.Users != null)
                                {
                                    @Html.DisplayFor(modelItem => item.Users.name)
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.auditType)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.notes)
                        </td>
                    </tr>
                }
            </tbody>*@
        </table>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdn.datatables.net/buttons/1.6.2/js/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js" type="text/javascript"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.html5.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //var currentDate = new Date();
            //$("#date-from").val("setDate", currentDate);
            //$("#date-to").datepicker("setDate", currentDate);
            Date.prototype.toDateInputValue = (function () {
                var local = new Date(this);
                local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
                return local.toJSON().slice(0, 10);
            });
            $('input[type="date"]').val(new Date().toDateInputValue());
            $('#example-report tfoot th').each(function () {
                var title = $(this).text();
                $(this).html('<input type="text" placeholder="Search ' + title + '" />');
            });
            showLoader();
            setTimeout(function () {
                $('.preloader-backdrop').fadeOut(200);
                $('body').addClass('has-animation');
            }, 0);
            $.ajax({
                url: "/Reports/GetReports",
                    dataType: "json",
                    type: 'POST',
                    async: false,
                    beforeSend: function () {
                        showLoader();
                    },
                    success: function (result) {
                        if (result == "null") {
                            var win = window.open("/users/login", "_self"); return;
                        }
                        $("#example-report tbody").remove();
                        var body = "<tbody>";
                        if (result != null && result.length > 0) {
                            showLoader();
                            for (var i = 0; i < result.length; i++) {
                                body += "<tr><td>" + formatedDate(result[i].auditDateTime) + "</td><td>" + result[i].users.name + "</td>";
                                body += "<td>" + result[i].auditType + "</td><td>" + result[i].notes + "</td></tr>";
                            }
                            hideLoader();
                        }
                        body += "</tbody>";
                        $("#example-report").append(body);
                        var table = $('#example-report').DataTable({
                            "oLanguage": {
                                "sEmptyTable": "No data available"
                            },
                            destroy: true,
                            dom: 'Blfrtip',
                            buttons: [
                                { extend: 'excel', className: 'btn-dt-table', text: 'Export To Excel', filename: 'Reports @DateTime.Now.ToString("MMddyyyy hh:mm tt")', title: ''}
                            ],
                            "order": [[0, "desc"]],
                            initComplete: function () {
                                // Apply the search
                                this.api().columns().every(function () {
                                    var that = this;
                                    $('input', this.footer()).on('keyup change clear', function () {
                                        if (that.search() !== this.value) {
                                            that.search(this.value).draw();
                                        }
                                    });
                                });
                            },
                        });
                    },
                    complete: function () {
                        hideLoader();
                    }
            });
            hideLoader();

            function formatedDate(dateValue) {
                var d = new Date(dateValue);
                var hours = d.getHours();
                var newformat = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12;
                hours = hours ? hours : 12;
                return ("0" + (d.getMonth() + 1)).slice(-2) + "/" + ("0" + d.getDate()).slice(-2) + "/" + d.getFullYear() + " " + hours + ":" + ("0" + d.getMinutes()).slice(-2) + " " + newformat;
            }


            $("#date-search").on('click', function () {

                var from = new Date($("#date-from").val());
                var to = new Date($("#date-to").val());
                if (from > to) {
                    alert("From date should less then To date");
                    return;
                }
                $.ajax({
                    url: "/Reports/GetByDate",
                    data: {
                        from: $("#date-from").val(),
                        to: $("#date-to").val(),
                        user: $("#userSelection").val()
                    },
                    dataType: "json",
                    type: 'POST',
                    async: false,
                    beforeSend: function () {
                        showLoader();
                    },
                    success: function (result) {
                        if (result == "null") {
                            var win = window.open("/users/login", "_self"); return;
                        }
                        $("#example-report tbody").remove();
                        var body = "<tbody>";
                        if (result != null && result.length > 0) {
                            for (var i = 0; i < result.length; i++) {
                                body += "<tr><td>" + formatedDate(result[i].auditDateTime) + "</td><td>" + result[i].users.name + "</td>";
                                //body += "<tr><td>" + result[i].auditDateTime + "</td><td>" + "Ram" + "</td>";
                                body += "<td>" + result[i].auditType + "</td><td>" + result[i].notes + "</td></tr>";
                            }
                        }
                        body += "</tbody>";
                        $("#example-report").append(body);
                        var table = $('#example-report').DataTable({
                            "oLanguage": {
                                "sEmptyTable": "No data available"
                            },
                            destroy: true,
                            dom: 'Blfrtip',
                            buttons: [
                                { extend: 'excel', className: 'btn-dt-table', text: 'Export To Excel', filename: 'Reports @DateTime.Now.ToString("MMddyyyy hh:mm tt")', title: ''}
                            ],
                            "order": [[0, "desc"]],
                            initComplete: function () {
                                // Apply the search
                                this.api().columns().every(function () {
                                    var that = this;
                                    $('input', this.footer()).on('keyup change clear', function () {
                                        if (that.search() !== this.value) {
                                            that.search(this.value).draw();
                                        }
                                    });
                                });
                            },
                        });
                    },
                    complete: function () {
                        hideLoader();
                    }
                });
            });

            $("#userSelection").on('change', function () {
                var userId = $(this).val();
                $.ajax({
                    url: "/Reports/GetUser",
                    data: {
                        id: userId,
                    },
                    dataType: "json",
                    type: 'POST',
                    async: false,
                    beforeSend: function () {
                        showLoader();
                    },
                    success: function (result) {
                        if (result == "null") {
                            var win = window.open("/users/login", "_self"); return;
                        }
                        $("#example-report tbody").remove();
                        var body = "<tbody>";
                        if (result != null && result.length > 0) {

                            for (var i = 0; i < result.length; i++) {
                                body += "<tr><td>" + formatedDate(result[i].auditDateTime) + "</td><td>" + result[i].users.name + "</td>";
                                body += "<td>" + result[i].auditType + "</td><td>" + result[i].notes + "</td></tr>";
                            }
                        }
                        body += "</tbody>";
                        $("#example-report").append(body);
                        var table = $('#example-report').DataTable({
                            "oLanguage": {
                                "sEmptyTable": "No data available"
                            },
                            destroy: true,
                            dom: 'Blfrtip',
                            buttons: [
                                { extend: 'excel', className: 'btn-dt-table', text: 'Export To Excel', filename: 'Reports @DateTime.Now.ToString("MMddyyyy hh:mm tt")', title: '' }
                            ],
                            "order": [[0, "desc"]],
                            initComplete: function () {
                                // Apply the search
                                this.api().columns().every(function () {
                                    var that = this;
                                    $('input', this.footer()).on('keyup change clear', function () {
                                        if (that.search() !== this.value) {
                                            that.search(this.value).draw();
                                        }
                                    });
                                });
                            },
                            // destroy: true,
                        });
                    },
                    complete: function () {
                        hideLoader();
                    }
                });
            });
        });
        $('#idReports').addClass("active");
        function showLoader() {
            $(".preloader-backdrop").show();
        }
        function hideLoader() {
            setTimeout(function () {
                $(".preloader-backdrop").hide();
            }, 1000);
        }
    </script>
}